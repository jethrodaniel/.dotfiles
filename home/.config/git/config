#         _ _                   __ _
#    __ _(_) |_ ___ ___  _ __  / _(_) __ _
#   / _` | | __/ __/ _ \| '_ \| |_| |/ _` |
#  | (_| | | || (_| (_) | | | |  _| | (_| |
# (_)__, |_|\__\___\___/|_| |_|_| |_|\__, |
#   |___/                            |___/
#
# Git settings

[user]
  name = Mark Delk
  email = jethrodaniel@gmail.com
  signingkey = 68C8E48191147625

[commit]
  gpgSign = true
  template = ~/.config/git/template

[push]
  # Ensure an upstream for the branch exists before pushing
  # default = simple

  # Always push the current branch to the remote, defaulting to remote origin.
  default = current

[core]
  editor = vim
  autocrlf = input

[diff]
  tool = fugitive
  wsErrorHighlight = new,old

[merge]
  tool = fugitive
  keepBackup = false

[mergetool "fugitive"]
  cmd = vim -f -c \"Gdiff\" \"$MERGED\"
	keepBackup = false

[rebase]
  # Show the auther name during a rebase
  instructionFormat = (%an <%ae>) %s

[url "ssh://git@github.com/"] # Always use ssh for github
  insteadOf = https://github.com/

[bash]
  # Speeds up a __git_ps1 prompt
  # https://brandur.org/fragments/hide-dirty
	showDirtyState = false

[sendemail]
  smtpserver = smtp.gmail.com
  smtpserverport = 587
  smtpencryption = tls

  smtpuser = jethrodaniel@gmail.com
  from = jethrodaniel@gmail.com
  to = jethrodaniel@gmail.com
  # smtp-pass =

  confirm = always

[alias]
  find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
  show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"

  jethro = "commit  --author='Mark Delk <jethrodaniel@gmail.com>'"

  hooks = "!sh -c 'curl https://raw.githubusercontent.com/jethrodaniel/.git-hooks/master/install.sh | bash'"

  # What was the last thing commited?
  last = log --shortstat -1 HEAD
  dlast= diff HEAD^
  dl= diff HEAD^

  # Paint a happy little picture, like `git log --oneline --decorate`, but with GPG status
  #  This is the local picture, hence the `l`.
  picl = log --format=format:"'%C(auto)%h %C(green bold)%G? %Creset%C(cyan dim)%ar%Creset%C(auto)%d% %Creset %s %C(cyan dim)'" --graph

  # See the whole picture
  pic = log --format=format:"'%C(auto)%h %C(green bold)%G? %Creset%C(cyan dim)%ar%Creset%C(auto)%d% %Creset %s %C(cyan dim)'" --graph --all

  # Type less to see less. `a` for  `--all`
  pa = log -10 --format=format:"'%C(auto)%h %C(green bold)%G? %Creset%C(cyan dim)%ar%Creset%C(auto)%d% %Creset %s %C(cyan dim)'" --graph --all
  p  = log -10 --format=format:"'%C(auto)%h %C(green bold)%G? %Creset%C(cyan dim)%ar%Creset%C(auto)%d% %Creset %s %C(cyan dim)'" --graph

  # Show all the git aliases
  alias = config --get-regexp ^alias\\.

  authors = shortlog -nes

  ls = ls-files

  # These are last, to avoid name clashes.
  a = add
  b = branch
  c = commit

  # commit-fix in case overcommit decides to interrupt
  #
  # https://github.com/sds/overcommit/issues/651
  cf = commit -F .git/COMMIT_EDITMSG

  # Assuming you have `hub` as a git alias
  ci = ci-status -f "%sC %S %Creset %U%n"

  co = checkout
  d = diff --color
  ds = diff --staged --color
  f = fetch -avp
  l = log

  # git merge-clean
  mc = "! f() { set -x; find . \\( -name '*.orig' -o -name '*BACKUP*' -o -name '*BASE*' -o -name '*LOCAL*' -o -name '*REMOTE*' \\) -delete; }; f"

  r = rebase
  reauthor = !bash -c 'git rebase --onto $1 --exec \"git commit --amend --no-edit\"'
  s = status

  sa = stash apply
  sd = stash drop
  sl = stash list
  sp = stash pop
  st = stash

  t = tag
  tl  = tag --list

  pp = push origin HEAD
  pt = push --tags origin HEAD


# Explicit colors.
#
# See <http://shallowsky.com/blog/programming/gitcolors.html>
# and <https://www.atlassian.com/git/tutorials/setting-up-a-repository/git-config>
#
# Colors from the dark theme of [gruvbox](https://github.com/morhetz/gruvbox).
#
# blue   - "#83a598"
# red    - "#fb4934"
# green  - "#b8bb26"
# yellow - "#fabd2f"
#
[color "diff"]
  plain = normal
  meta = bold
  frag = bold "#83a598"
  old = bold "#fb4934"
  new = bold "#b8bb26"
  commit = bold "#fabd2f"
  whitespace = normal bold "#fb4934"
[color "branch"]
  current = bold "#b8bb26"
  local = normal
  remote = bold "#fb4934"
  plain = normal
[color "status"]
  header = normal
  added = bold "#b8bb26"
  current = bold "#b8bb26"
  changed = bold "#fb4934"
  untracked = bold "#fb4934"
  nobranch = bold "#fb4934"
[color "interactive"]
  prompt = normal
  header = normal
  help = normal
  error = normal

# Include additional settings.
#
# At the end so that these override the global values
[includeIf "gitdir:~/work/"]
  path = ~/.config/git/config_work
